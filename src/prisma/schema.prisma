// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  name      String
  password  String
  chats     ChatUser[] // This stores the many-to-many relation between User and Chat
  messages  Message[]  // Messages sent by the user
  about     String     @default("Zap me a message!") 
  attributes String[]
  imageUrl String @default("https://i.ibb.co/YThLBRYP/image-copy-7.png")
}

model Chat {
  id        Int        @id @default(autoincrement())
  chatId    String     @unique
  messages  Message[]  // Messages within the chat
  users     ChatUser[] // Many-to-many relation to User through the join table
  latestMessageAt DateTime? @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int      // Foreign key to User (sender)
  chatId    Int      // Foreign key to Chat
  user      User     @relation(fields: [userId], references: [id])
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model ChatUser {
  userId Int
  chatId Int
  user   User @relation(fields: [userId], references: [id])
  chat   Chat @relation(fields: [chatId], references: [id])

  @@id([userId, chatId]) // Composite primary key to ensure each user appears once per chat
}